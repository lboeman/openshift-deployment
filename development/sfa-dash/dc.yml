apiVersion: v1
kind: DeploymentConfig
metadata:
  annotations: {}
  generation: 1
  labels:
    app: sfa-dash
  name: sfa-dash
  namespace: {{ namespace }}
spec:
  replicas: 1
  selector:
    deploymentConfig: sfa-dash
  strategy:
    type: Rolling
  template:
    metadata:
      labels:
        app: sfa-dash
        deploymentConfig: sfa-dash
    spec:
      containers:
      - env:
        - name: prometheus_multiproc_dir
          value: /metrics
        - name: APP_MODULE
          value: {{ dashboard_app }}
        - name: APP_CONFIG
          value: ./gunicorn_config.py
        - name: SENTRY_DSN
          value: {{ sentry_dsn }}
        - name: FLASK_SECRET_KEY
          valueFrom:
            secretKeyRef:
              key: flask-secret-key
              name: sfa-dash-secret-config
        - name: AUTH0_CLIENT_ID
          valueFrom:
            secretKeyRef:
              key: auth0-client-id
              name: sfa-dash-secret-config
        - name: AUTH0_CLIENT_SECRET
          valueFrom:
            secretKeyRef:
              key: auth0-client-secret
              name: sfa-dash-secret-config
        {% if mysql_secret is defined and mysql_secret -%}
        - name: SQLALCHEMY_DATABASE_URI
          valueFrom:
            secretKeyRef:
              key: mysql-secret
              name: sfa-dash-secret-config
        {%- endif %}
        name: sfa-dash
        image: sfa-dash:latest
        ports:
        - containerPort: 8080
          protocol: TCP
        - containerPort: 8081
          protocol: TCP
        resources: {}
        livenessProbe:
          tcpSocket:
            port: 8080
          initialDelaySeconds: 1
          timeoutSeconds: 5
        terminationMessagePath: /dev/terminal-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /certs
          name: cert-secret
        - mountPath: /metrics
          name: metrics
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: metrics
        emptyDir: {}
      - name: cert-secret
        secret:
          defaultMode: 420
          secretName: sfa-dash-svc-cert
  test: false
  triggers:
  - imageChangeParams:
      automatic: true
      containerNames:
      - sfa-dash
      from:
        kind: ImageStreamTag
        name: sfa-dash:{{ dash_image_tag | default('latest') }}
        namespace: {{ namespace }}
    type: ImageChange
  - type: ConfigChange
