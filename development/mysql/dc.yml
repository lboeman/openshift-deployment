apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  annotations: {}
  labels:
    app: mysql
  name: mysql
  namespace: {{ namespace }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    name: mysql
  strategy:
    activeDeadlineSeconds: 21600
    recreateParams:
      timeoutSeconds: 600
    resources: {}
    type: Recreate
  template:
    metadata:
      creationTimestamp: null
      labels:
        name: mysql
    spec:
      initContainers:
      - name: get-sql-data
        image: centos
        volumeMounts:
        - mountPath: /init-files
          name: init-files
        command:
          - sh
          - -c
          - |
            pushd /tmp 
            curl -L https://github.com/SolarArbiter/solarforecastarbiter-api/archive/master.tar.gz | tar xvz
            pushd /tmp/solarforecastarbiter-api-master/datastore
            cp -r migrations /init-files/migrations
            pushd /init-files
            curl -L https://github.com/golang-migrate/migrate/releases/download/v4.2.5/migrate.linux-amd64.tar.gz | tar xvz
            cat <<\EOF > 0_run_migration.sh
            #! /bin/bash
            /docker-entrypoint-initdb.d/migrate.linux-amd64 -path /docker-entrypoint-initdb.d/migrations -database "mysql://root:${MYSQL_ROOT_PASSWORD-what}@unix(/tmp/mysql.sock)/arbiter_data" up
            EOF
            cat <<\EOF > 1_alter_user.sh
            #! /bin/bash
            MYSQL_PWD=$MYSQL_ROOT_PASSWORD mysql -S /tmp/mysql.sock -u root -e "ALTER USER 'apiuser'@'%' IDENTIFIED BY '$ALTER_USER_PASSWORD'"
            MYSQL_PWD=$MYSQL_ROOT_PASSWORD mysql -S /tmp/mysql.sock -u root -e "ALTER USER 'frameworkadmin'@'%' IDENTIFIED BY '$ALTER_ADMINUSER_PASSWORD'"
            EOF
      containers:
      - env:
        - name: MYSQL_ROOT_PASSWORD
          valueFrom:
            secretKeyRef:
              key: database-root-password
              name: mysql
        - name: MYSQL_DATABASE
          valueFrom:
            secretKeyRef:
              key: database-name
              name: mysql
        - name: ALTER_USER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: alter-user-password
              name: mysql
        - name: ALTER_ADMINUSER_PASSWORD
          valueFrom:
            secretKeyRef:
              key: alter-adminuser-password
              name: mysql
        image: percona:8.0.13-4-centos
        imagePullPolicy: IfNotPresent
        livenessProbe:
          failureThreshold: 3
          initialDelaySeconds: 30
          periodSeconds: 10
          successThreshold: 1
          tcpSocket:
            port: 3306
          timeoutSeconds: 1
        name: mysql
        ports:
        - containerPort: 3306
          protocol: TCP
        readinessProbe:
          exec:
            command:
            - /bin/sh
            - -i
            - -c
            - MYSQL_PWD="$MYSQL_ROOT_PASSWORD" mysql -h 127.0.0.1 -u root -D $MYSQL_DATABASE
              -e 'SELECT 1'
          failureThreshold: 3
          initialDelaySeconds: 5
          periodSeconds: 10
          successThreshold: 1
          timeoutSeconds: 1
        resources:
          limits:
            memory: 4Gi
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /docker-entrypoint-initdb.d/
          name: init-files
        - mountPath: /etc/my.cnf.d/
          name: mysql-cnf
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - name: init-files
        emptyDir: {}
      - name: mysql-cnf
        configMap:
          name: mysql
          items:
            - key: my-cnf
              path: my.cnf
  test: false
  triggers:
  - type: ConfigChange
status:
  availableReplicas: 0
  latestVersion: 0
  observedGeneration: 0
  replicas: 0
  unavailableReplicas: 0
  updatedReplicas: 0
